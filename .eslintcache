[{"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\index.js":"1","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\App.js":"2","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\components\\navigation\\Header.js":"3","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\Home.jsx":"4","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\Login.jsx":"5","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\Register.jsx":"6","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\firebase.js":"7","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\RegisterComplete.js":"8","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\reducers\\index.js":"9","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\reducers\\user\\user.reducer.js":"10","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\ForgotPassword.jsx":"11","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\functions\\auth.functions.js":"12"},{"size":643,"mtime":1607863394027,"results":"13","hashOfConfig":"14"},{"size":1546,"mtime":1607949500918,"results":"15","hashOfConfig":"14"},{"size":1975,"mtime":1607947778402,"results":"16","hashOfConfig":"14"},{"size":214,"mtime":1607608720343,"results":"17","hashOfConfig":"14"},{"size":4321,"mtime":1608304633000,"results":"18","hashOfConfig":"14"},{"size":1656,"mtime":1607951404214,"results":"19","hashOfConfig":"14"},{"size":596,"mtime":1607698548376,"results":"20","hashOfConfig":"14"},{"size":3094,"mtime":1608039956327,"results":"21","hashOfConfig":"14"},{"size":191,"mtime":1607863639923,"results":"22","hashOfConfig":"14"},{"size":252,"mtime":1607863616777,"results":"23","hashOfConfig":"14"},{"size":1848,"mtime":1607951215752,"results":"24","hashOfConfig":"14"},{"size":466,"mtime":1608304557771,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jij0ag",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\index.js",[],["56","57"],"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\App.js",["58"],"import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Header from './components/navigation/Header';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport Home from './pages/Home';\nimport RegisterComplete from \"./pages/auth/RegisterComplete\";\nimport ForgotPassword from \"./pages/auth/ForgotPassword\";\n\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  // to check firebase auth state\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      // console.log(\"user\", user);\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult();\n\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: {\n            email: user.email,\n            token: idTokenResult.token,\n          },\n        });\n      }\n    });\n    // cleanup\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <>\n      <Header/>\n      <ToastContainer/>\n      <Switch>\n        <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n        <Route exact path=\"/register/complete\" component={RegisterComplete} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\components\\navigation\\Header.js",[],"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\Home.jsx",[],"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\Login.jsx",["59"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth, googleAuthProvider } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"antd\";\r\nimport { MailOutlined, GoogleOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrUpdateUser } from \"../../functions/auth.functions\"; \r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) history.push(\"/\");\r\n  }, [user]);\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // console.table(email, password);\r\n    setLoading(true);\r\n    try {\r\n        const result = await auth.signInWithEmailAndPassword(email, password);\r\n        // console.log(result);\r\n        const { user } = result;\r\n        const idTokenResult = await user.getIdTokenResult();\r\n  \r\n        createOrUpdateUser(idTokenResult.token)\r\n        .then((res) => {\r\n          // console.log(\"CREATE OR UPDATE RES\", res);\r\n          dispatch({\r\n            type: \"LOGGED_IN_USER\",\r\n            payload: {\r\n              name: res.data.name,\r\n              email: user.email,\r\n              token: idTokenResult.token,\r\n              role: res.data.role,\r\n              _id: res.data._id\r\n            },\r\n          });\r\n        })\r\n        .catch();\r\n\r\n        history.push(\"/\");\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n        toast.error(error.message);\r\n        setLoading(false);\r\n      }\r\n  };\r\n\r\n    const googleLogin = async () => {\r\n    auth\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(async (result) => {\r\n        const { user } = result;\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"LOGGED_IN_USER\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => console.log(err));\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Your email\"\r\n          autoFocus\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Your password\"\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type=\"primary\"\r\n        className=\"mb-3\"\r\n        block\r\n        shape=\"round\"\r\n        icon={<MailOutlined />}\r\n        size=\"large\"\r\n        disabled={!email || password.length < 6}\r\n      >\r\n        Login with Email/Password\r\n      </Button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading...</h4>\r\n          ) : (\r\n            <h4>Login</h4>\r\n          )}\r\n          {loginForm()}\r\n\r\n          <Button\r\n            onClick={googleLogin}\r\n            type=\"danger\"\r\n            className=\"mb-3\"\r\n            block\r\n            shape=\"round\"\r\n            icon={<GoogleOutlined />}\r\n            size=\"large\"\r\n          >\r\n            Login with Google\r\n          </Button>\r\n\r\n          <Link to=\"/forgot/password\" className=\"float-right text-danger\">\r\n            Forgot Password\r\n          </Link>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\Register.jsx",["60"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) history.push(\"/\");\r\n  }, [user]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"ENV --->\", process.env.REACT_APP_REGISTER_REDIRECT_URL);\r\n    const config = {\r\n      url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n      handleCodeInApp: true,\r\n    };\r\n\r\n    await auth.sendSignInLinkToEmail(email, config);\r\n    toast.success(\r\n      `Email is sent to ${email}. Click the link to complete your registration.`\r\n    );\r\n    // save user email in local storage\r\n    window.localStorage.setItem(\"emailForRegistration\", email);\r\n    // clear state\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const registerForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"email\"\r\n        className=\"form-control\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Your email\"\r\n        autoFocus\r\n      />\r\n\r\n      <br />\r\n      <button type=\"submit\" className=\"btn btn-raised\">\r\n        Register\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <h4>Register</h4>\r\n          {registerForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\firebase.js",[],"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\RegisterComplete.js",["61"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrUpdateUser } from \"../../functions/auth.functions\";\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\r\n    // console.log(window.location.href);\r\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => { \r\n    e.preventDefault();\r\n\r\n    // validation\r\n    if (!email || !password) {\r\n      toast.error(\"Email and password is required\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      toast.error(\"Password must be at least 6 characters long\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(\r\n        email,\r\n        window.location.href\r\n      );\r\n      //   console.log(\"RESULT\", result);\r\n      if (result.user.emailVerified) {\r\n        // remove user email fom local storage\r\n        window.localStorage.removeItem(\"emailForRegistration\");\r\n        // get user id token\r\n        let user = auth.currentUser;\r\n        await user.updatePassword(password);\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        // redux store\r\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\r\n\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"LOGGED_IN_USER\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => console.log(err));\r\n\r\n        // redirect\r\n        history.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error.message);\r\n    }\r\n\r\n  };\r\n\r\n  const completeRegistrationForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"email\"\r\n        className=\"form-control\"\r\n        value={email}\r\n        disabled\r\n        />\r\n\r\n      <input\r\n        type=\"password\"\r\n        className=\"form-control\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        autoFocus\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className=\"btn btn-raised\">\r\n        Complete Registration\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <h4>Register Complete</h4>\r\n          {completeRegistrationForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComplete;\r\n","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\reducers\\index.js",[],"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\reducers\\user\\user.reducer.js",[],"C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\pages\\auth\\ForgotPassword.jsx",["62"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    useEffect(() => {\r\n      if (user && user.token) {\r\n        history.push(\"/\");\r\n      }\r\n    }, [user]);\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n  \r\n      const config = {\r\n        url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n        handleCodeInApp: true,\r\n      };\r\n  \r\n      await auth\r\n        .sendPasswordResetEmail(email, config)\r\n        .then(() => {\r\n          setEmail(\"\");\r\n          setLoading(false);\r\n          toast.success(\"Check your email for password reset link\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          toast.error(error.message);\r\n          console.log(\"ERROR MSG IN FORGOT PASSWORD\", error);\r\n        });\r\n    };\r\n  \r\n    return (\r\n      <div className=\"container col-md-6 offset-md-3 p-5\">\r\n        {loading ? (\r\n          <h4 className=\"text-danger\">Loading</h4>\r\n        ) : (\r\n          <h4>Forgot Password</h4>\r\n        )}\r\n  \r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Type your email\"\r\n            autoFocus\r\n          />\r\n          <br />\r\n          <button className=\"btn btn-raised\" disabled={!email}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ForgotPassword;\r\n  ","C:\\Users\\kim\\node-react\\ecommerce02\\online-store-client\\src\\functions\\auth.functions.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":38,"column":6,"nodeType":"69","endLine":38,"endColumn":8,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":19,"column":6,"nodeType":"69","endLine":19,"endColumn":12,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"71","line":13,"column":6,"nodeType":"69","endLine":13,"endColumn":12,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":11,"column":11,"nodeType":"76","messageId":"77","endLine":11,"endColumn":15},{"ruleId":"67","severity":1,"message":"71","line":16,"column":8,"nodeType":"69","endLine":16,"endColumn":14,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["82"],["83"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},{"desc":"87","fix":"90"},"Update the dependencies array to be: [dispatch]",{"range":"91","text":"92"},"Update the dependencies array to be: [history, user]",{"range":"93","text":"94"},{"range":"95","text":"94"},{"range":"96","text":"94"},[1092,1094],"[dispatch]",[739,745],"[history, user]",[398,404],[486,492]]